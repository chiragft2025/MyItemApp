@model IEnumerable<MyNewApp.Models.Item>
@{
    ViewData["Title"] = "Get All Items";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["ErrorMessage"] != null)
{
    <p class="text-danger">@TempData["ErrorMessage"]</p>
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="fw-bold text-success mb-0">All Items</h2>
    <a asp-action="AddItems" class="btn btn-success btn-sm">
        <i class="bi bi-plus-circle"></i> Create New
    </a>
</div>

<!-- 🔍 Search Box -->
<div class="mb-3">
    <input type="text" id="searchBox" class="form-control" placeholder="Search by item name..." value="@ViewBag.Search" />
</div>

<!-- 📋 Table Container -->
<div id="itemTable">
    @await Html.PartialAsync("_ItemTable", Model)
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            // 🔍 Live search without button click
            $('#searchBox').on('keyup', function () {
                var search = $(this).val();
                $.get('@Url.Action("GetItems", "Items")', { search: search }, function (data) {
                    var html = $(data).find('#itemTable').html();
                    $('#itemTable').html(html);
                });
            });

            // 📄 Handle pagination click dynamically
            $(document).on('click', '.pagination a', function (e) {
                e.preventDefault();
                var page = $(this).data('page');
                var search = $('#searchBox').val();

                $.get('@Url.Action("GetItems", "Items")', { search: search, page: page }, function (data) {
                    var html = $(data).find('#itemTable').html();
                    $('#itemTable').html(html);
                });
            });
        });
    </script>
}
